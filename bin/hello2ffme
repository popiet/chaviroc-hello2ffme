#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;

use FindBin '$RealBin';
use lib "$RealBin/../local/lib/perl5";
use Text::CSV_XS;

use lib "$RealBin/../lib";
use Chaviroc::Hello2Ffme qw< data value conf >;

# configuration file
# drives transformations
my $conf = "$RealBin/../etc/hello2ffme.csv";
GetOptions("conf=s" => \$conf);

my ($filein, $fileout) = @ARGV;
my $in = *STDIN;
if ($filein) {
    open $in, '<', $filein
        or die "pb open < $filein: $!";
}

my $out = *STDOUT;
if ($fileout) {
    open $out, '>', $fileout
        or die "pb open > $fileout: $!";
}
    
my @fields = conf($conf);

# read and write csv
# separator ';'
my $parser = Text::CSV_XS->new({
    sep_char => ';',
    allow_loose_quotes => 1,
    binary => 1,
    auto_diag => 1,
    eol => $/,
});

# first row helloasso (in)
my $head = $parser->getline($in);

# first row ffme (out)
$parser->print($out, [ map { $_->[0] } @fields ]);

while (my $row = $parser->getline($in)) {
    # key => value of the row
    my $data = data($row, $head);

    # new line to be written
    my @new;

    for my $field (@fields) {
        my $value = value($data, $field);
        push @new, $value;
    }

    $parser->print($out, \@new);
}

__END__

=encoding utf8

=head1 NAME

hello2ffme - Transformer le csv HelloAsso en un csv pour la FFME

=head1 INSTALLATION

    carton install

pour installer les modules perl nécéssaires

=head1 SYNOPSIS

    bin/hello2ffme [--conf etc/hello2ffme.csv] < hello.csv > ffme.csv

=head1 DESCRIPTION

Le fichier d'entrée hello.csv est un csv encodé en UTF-8
dont le séparateur est le ';'

Le fichier de sortie ffme.csv sera un csv encodé en UTF-8
avec pour séparateur ';' et pour première ligne le nom des colonnes du fichier.

La transformation est pilotée par le fichier de configuration 
par défaut etc/hello2ffme.csv

C'est un csv avec comme séparateur le ';' et pour première ligne le nom des colonnes du fichier
nom du champ ffme dans le fichier de sortie;champ_helloasso1 correspondant;champ_helloasso2...

Chaque ligne du fichier d'entrée hello.csv est parsée.
Pour chaque ligne du fichier de conf, un champ sera créé dans le fichier de sortie
sa valeur sera la valeur du champ spécifié en 2e colonne du fichier d'entrée.
On peut spécifier plusieurs colonnes dans ce cas 
les valeurs seront concaténées avec un espace.

Si la valeur de champ_helloasso1 commence par 'fct:', 
ex 'fct:action' alors la fonction Chaviroc::Hello2Ffme::action 
sera appélée avec en paramètre la ou les valeurs des champs spécifiés
de la ligne du fichier d'entrée courante

